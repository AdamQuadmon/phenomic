{"head":{"title":"How to code things for your app/website with Phenomic","incomplete":true,"description":"Phenomic is based on JavaScript. So you can use any npm packages you want or raw JavaScript to code anything you want. Phenomic is alsoâ€¦"},"body":"<p>Phenomic is based on JavaScript.\nSo you can use any <a href=\"https://www.npmjs.com/\">npm</a> packages you want\nor raw JavaScript to code anything you want.</p>\n<p>Phenomic is also based on the <a href=\"http://facebook.github.io/react/\">React</a> library\nand ecosystem.\nBe sure to check\n<a href=\"https://github.com/petehunt/react-howto\">how to tackle the React ecosystem</a>.</p>\n<h2 id=\"constants\"><a href=\"#constants\"></a>Constants</h2>\n<p>Several constants are exposed (injected) in your JavaScript code in\n<code>process.env</code>:</p>\n<ul>\n<li><code>process.env.NODE_ENV</code>: \"production\" for production (static) build</li>\n<li><code>process.env.PHENOMIC_USER_PATHNAME</code>: the base path of your website/app</li>\n<li><code>process.env.PHENOMIC_USER_URL</code>: your website homepage url (<code>package.json/homepage</code> field)</li>\n<li><code>process.env.PHENOMIC_NAME</code>: Phenomic pretty name</li>\n<li><code>process.env.PHENOMIC_VERSION</code>: Phenomic version</li>\n<li><code>process.env.PHENOMIC_HOMEPAGE</code>: Phenomic homepage url</li>\n<li><code>process.env.PHENOMIC_REPOSITORY</code>: Phenomic repository url</li>\n</ul>\n<h2 id=\"available-modules\"><a href=\"#available-modules\"></a>Available modules</h2>\n<p>@todo document all public modules</p>\n<h3 id=\"components\"><a href=\"#components\"></a>Components</h3>\n<h4 id=\"pagecontainer\"><a href=\"#pagecontainer\"></a><code>PageContainer</code></h4>\n<p>Component to define and declares all pages layouts.</p>\n<pre><code class=\"language-js\">import PageContainer from \"phenomic/lib/PageContainer\"\n\n// @todo show usage\n</code></pre>\n<p><a href=\"https://github.com/MoOx/phenomic/blob/master/docs/web_modules/app/routes.js\">Check the usage in the default boilerplate.</a></p>\n<h4 id=\"bodycontainer\"><a href=\"#bodycontainer\"></a><code>BodyContainer</code></h4>\n<p>This component should be used to wrap pages <code>body</code>.</p>\n<pre><code class=\"language-js\">import { BodyContainer } from \"phenomic\"\n\n// ...\n// in this example, Page is used as a layout\n// and declared in a PageContainer usage\nclass Page extends Component {\n\n  // ...\n\n  render() {\n    const { props } = this\n    const { body } = props\n    // ...\n    return (\n      &#x3C;div>\n        /* ... */\n        &#x3C;BodyContainer>{ body }&#x3C;/BodyContainer>\n        /* === &#x3C;BodyContainer>{ this.props.body }&#x3C;/BodyContainer> *\n        /* ... */\n      &#x3C;/div>\n    )\n  }\n</code></pre>\n<p><a href=\"https://github.com/MoOx/phenomic/blob/master/boilerplate/web_modules/layouts/Page/index.js\">Check the usage in the default boilerplate.</a></p>\n<h3 id=\"utilities\"><a href=\"#utilities\"></a>Utilities</h3>\n<h3 id=\"joinuri\"><a href=\"#joinuri\"></a><code>joinUri</code></h3>\n<p>Simple utility to join uri parts. Ensure that there is no missing or duplicate\nslashes.</p>\n<pre><code class=\"language-js\">import { joinUri } from \"phenomic\"\n\njoinUri(\"some\", \"thing\") // \"some/thing\"\njoinUri(\"some\", \"/thing\") // \"some/thing\"\njoinUri(\"some/\", \"/thing\") // \"some/thing\"\njoinUri(\"some\", \"thing\", \"else\"), // \"some/thing/else\"\njoinUri(\"https://this/\", \"/one/\", \"/thing/\"), // \"https://this/one/thing/\"\n</code></pre>\n<h2 id=\"routing\"><a href=\"#routing\"></a>Routing</h2>\n<p>@todo</p>\n<p><a href=\"https://github.com/MoOx/phenomic/blob/master/docs/web_modules/app/routes.js\">Check how to declare routes in the default boilerplate</a></p>\n","rawBody":"\nPhenomic is based on JavaScript.\nSo you can use any [npm](https://www.npmjs.com/) packages you want\nor raw JavaScript to code anything you want.\n\nPhenomic is also based on the [React](http://facebook.github.io/react/) library\nand ecosystem.\nBe sure to check\n[how to tackle the React ecosystem](https://github.com/petehunt/react-howto).\n\n## Constants\n\nSeveral constants are exposed (injected) in your JavaScript code in\n``process.env``:\n\n- ``process.env.NODE_ENV``: \"production\" for production (static) build\n- ``process.env.PHENOMIC_USER_PATHNAME``: the base path of your website/app\n- ``process.env.PHENOMIC_USER_URL``: your website homepage url (`package.json/homepage` field)\n- ``process.env.PHENOMIC_NAME``: Phenomic pretty name\n- ``process.env.PHENOMIC_VERSION``: Phenomic version\n- ``process.env.PHENOMIC_HOMEPAGE``: Phenomic homepage url\n- ``process.env.PHENOMIC_REPOSITORY``: Phenomic repository url\n\n## Available modules\n\n@todo document all public modules\n\n### Components\n\n#### ``PageContainer``\n\nComponent to define and declares all pages layouts.\n\n```js\nimport PageContainer from \"phenomic/lib/PageContainer\"\n\n// @todo show usage\n```\n\n[Check the usage in the default boilerplate.](https://github.com/MoOx/phenomic/blob/master/docs/web_modules/app/routes.js)\n\n#### ``BodyContainer``\n\nThis component should be used to wrap pages ``body``.\n\n```js\nimport { BodyContainer } from \"phenomic\"\n\n// ...\n// in this example, Page is used as a layout\n// and declared in a PageContainer usage\nclass Page extends Component {\n\n  // ...\n\n  render() {\n    const { props } = this\n    const { body } = props\n    // ...\n    return (\n      <div>\n        /* ... */\n        <BodyContainer>{ body }</BodyContainer>\n        /* === <BodyContainer>{ this.props.body }</BodyContainer> *\n        /* ... */\n      </div>\n    )\n  }\n```\n\n[Check the usage in the default boilerplate.](https://github.com/MoOx/phenomic/blob/master/boilerplate/web_modules/layouts/Page/index.js)\n\n### Utilities\n\n### ``joinUri``\n\nSimple utility to join uri parts. Ensure that there is no missing or duplicate\nslashes.\n\n```js\nimport { joinUri } from \"phenomic\"\n\njoinUri(\"some\", \"thing\") // \"some/thing\"\njoinUri(\"some\", \"/thing\") // \"some/thing\"\njoinUri(\"some/\", \"/thing\") // \"some/thing\"\njoinUri(\"some\", \"thing\", \"else\"), // \"some/thing/else\"\njoinUri(\"https://this/\", \"/one/\", \"/thing/\"), // \"https://this/one/thing/\"\n```\n\n\n## Routing\n\n@todo\n\n[Check how to declare routes in the default boilerplate](https://github.com/MoOx/phenomic/blob/master/docs/web_modules/app/routes.js)\n","raw":"---\ntitle: How to code things for your app/website with Phenomic\nincomplete: true\n---\n\nPhenomic is based on JavaScript.\nSo you can use any [npm](https://www.npmjs.com/) packages you want\nor raw JavaScript to code anything you want.\n\nPhenomic is also based on the [React](http://facebook.github.io/react/) library\nand ecosystem.\nBe sure to check\n[how to tackle the React ecosystem](https://github.com/petehunt/react-howto).\n\n## Constants\n\nSeveral constants are exposed (injected) in your JavaScript code in\n``process.env``:\n\n- ``process.env.NODE_ENV``: \"production\" for production (static) build\n- ``process.env.PHENOMIC_USER_PATHNAME``: the base path of your website/app\n- ``process.env.PHENOMIC_USER_URL``: your website homepage url (`package.json/homepage` field)\n- ``process.env.PHENOMIC_NAME``: Phenomic pretty name\n- ``process.env.PHENOMIC_VERSION``: Phenomic version\n- ``process.env.PHENOMIC_HOMEPAGE``: Phenomic homepage url\n- ``process.env.PHENOMIC_REPOSITORY``: Phenomic repository url\n\n## Available modules\n\n@todo document all public modules\n\n### Components\n\n#### ``PageContainer``\n\nComponent to define and declares all pages layouts.\n\n```js\nimport PageContainer from \"phenomic/lib/PageContainer\"\n\n// @todo show usage\n```\n\n[Check the usage in the default boilerplate.](https://github.com/MoOx/phenomic/blob/master/docs/web_modules/app/routes.js)\n\n#### ``BodyContainer``\n\nThis component should be used to wrap pages ``body``.\n\n```js\nimport { BodyContainer } from \"phenomic\"\n\n// ...\n// in this example, Page is used as a layout\n// and declared in a PageContainer usage\nclass Page extends Component {\n\n  // ...\n\n  render() {\n    const { props } = this\n    const { body } = props\n    // ...\n    return (\n      <div>\n        /* ... */\n        <BodyContainer>{ body }</BodyContainer>\n        /* === <BodyContainer>{ this.props.body }</BodyContainer> *\n        /* ... */\n      </div>\n    )\n  }\n```\n\n[Check the usage in the default boilerplate.](https://github.com/MoOx/phenomic/blob/master/boilerplate/web_modules/layouts/Page/index.js)\n\n### Utilities\n\n### ``joinUri``\n\nSimple utility to join uri parts. Ensure that there is no missing or duplicate\nslashes.\n\n```js\nimport { joinUri } from \"phenomic\"\n\njoinUri(\"some\", \"thing\") // \"some/thing\"\njoinUri(\"some\", \"/thing\") // \"some/thing\"\njoinUri(\"some/\", \"/thing\") // \"some/thing\"\njoinUri(\"some\", \"thing\", \"else\"), // \"some/thing/else\"\njoinUri(\"https://this/\", \"/one/\", \"/thing/\"), // \"https://this/one/thing/\"\n```\n\n\n## Routing\n\n@todo\n\n[Check how to declare routes in the default boilerplate](https://github.com/MoOx/phenomic/blob/master/docs/web_modules/app/routes.js)\n","__filename":"docs/usage/scripting.md","__url":"/docs/usage/scripting/","__resourceUrl":"/docs/usage/scripting/index.html","__dataUrl":"/docs/usage/scripting/index.html.6f4b02320c42af692be33c6b0906c04c.json"}