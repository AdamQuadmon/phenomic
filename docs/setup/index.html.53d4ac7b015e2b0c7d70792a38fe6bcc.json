{"head":{"title":"How to setup Phenomic","description":"Phenomic require at least Node.js@^4.2.0 / npm@^3.0.0.   We recommend you to use nvm to manage different versions of node. A minimal…"},"body":"<p>Phenomic require at least\n<strong><a href=\"http://nodejs.org/\">Node.js@^4.2.0</a> / <a href=\"http://npmjs.com/\">npm@^3.0.0</a></strong>.<br>\nWe recommend you to use <a href=\"https://github.com/creationix/nvm\">nvm</a> to manage\ndifferent versions of node.</p>\n<p><strong>A minimal boilerplate is required, in order to provide you some\nflexibility.</strong></p>\n<h2 id=\"one-command-setup\"><a href=\"#one-command-setup\"></a>One command setup</h2>\n<p><em>Note: we recommend you to read the <a href=\"#detailed-setup\">detailed setup</a>\nif you are new to Phenomic.</em></p>\n<h3 id=\"os-x--linux\"><a href=\"#os-x--linux\"></a>OS X / Linux</h3>\n<pre><code class=\"language-console\">$ DIR=your-website-folder &#x26;&#x26; mkdir $DIR &#x26;&#x26; cd $DIR &#x26;&#x26; mkdir node_modules &#x26;&#x26; \\\nnpm i phenomic &#x26;&#x26; ./node_modules/.bin/phenomic setup &#x26;&#x26; npm i &#x26;&#x26; npm start\n</code></pre>\n<h3 id=\"windows\"><a href=\"#windows\"></a>Windows</h3>\n<pre><code class=\"language-console\">> SET DIR=your-website-folder &#x26;&#x26; mkdir %DIR% &#x26;&#x26; cd %DIR% &#x26;&#x26; mkdir node_modules &#x26;&#x26; ^\nnpm i phenomic &#x26;&#x26; ./node_modules/.bin/phenomic setup &#x26;&#x26; npm i &#x26;&#x26; npm start\n</code></pre>\n<h2 id=\"detailed-setup\"><a href=\"#detailed-setup\"></a>Detailed setup</h2>\n<h3 id=\"create-a-new-folder\"><a href=\"#create-a-new-folder\"></a>Create a new folder</h3>\n<p>That's an easy step.</p>\n<pre><code class=\"language-console\">$ DIR=your-website-folder\n$ mkdir $DIR &#x26;&#x26; cd $DIR\n</code></pre>\n<h3 id=\"get-phenomic\"><a href=\"#get-phenomic\"></a>Get Phenomic</h3>\n<p>You will need to install Phenomic first, to generate the required boilerplate.\nYou can install Phenomic from npm to get latest stable version, or install\nit from git to get latest bleeding edge updates.</p>\n<p><em>By installing it locally, you ensure that several projects can rely on\ndifferent versions of Phenomic.\nAnyway, Phenomic will probably not work installed globally.</em></p>\n<pre><code class=\"language-console\">$ mkdir node_modules\n</code></pre>\n<p><em>This command is to be sure that phenomic will be installed in the current\nfolder, otherwise, npm might try to install it in a parent folder until it\nfinds a <code>node_modules</code> or a <code>package.json</code>, up to your HOME folder.</em></p>\n<h4 id=\"install-from-npm\"><a href=\"#install-from-npm\"></a>Install from npm</h4>\n<pre><code class=\"language-console\">$ npm install phenomic\n</code></pre>\n<ul>\n<li><code>--save[-dev]</code> is useless because there is no <code>package.json</code> yet.\nThis will be be handled by the setup command below.</li>\n<li>You can ignore error about missing <code>package.json</code> and warnings about\nmissing peer dependencies.</li>\n</ul>\n<h4 id=\"install-from-git\"><a href=\"#install-from-git\"></a>Install from git</h4>\n<p>To install from git, you will need to get some deps to transpile sources</p>\n<pre><code class=\"language-console\">$ npm install babel-cli babel-preset-react babel-preset-es2015 babel-preset-stage-1 babel-plugin-flow-react-proptypes\n$ npm install https://github.com/MoOx/phenomic.git\n</code></pre>\n<h3 id=\"setup-boilerplate\"><a href=\"#setup-boilerplate\"></a>Setup boilerplate</h3>\n<p><strong>Notice:</strong> This step will create (and overwrite) any existing <code>package.json</code>.</p>\n<pre><code class=\"language-console\">$ ./node_modules/.bin/phenomic setup\n</code></pre>\n<p><strong>⚠️ If you got errors here, please double check that you have required version of\nNode and NPM specified at the top of this page.</strong></p>\n<p>After you answer some questions, your boilerplate is ready.  </p>\n<p><em>Tip:</em> You can open <code>package.json</code> and adjust some values to fit your needs.</p>\n<p><em>Check out <a href=\"../usage/configuration/\">Configuration</a> for more information about\nthe configuration options.</em></p>\n<h3 id=\"install-dependencies\"><a href=\"#install-dependencies\"></a>Install dependencies</h3>\n<p>When you are done the setup, it's time to get all dependencies.</p>\n<pre><code class=\"language-console\">$ npm install\n</code></pre>\n<p>npm will install some peer dependencies for you; by doing this we ensure that\n<em>you</em> control the dependencies that you are using. This way you are totally aware\nof what you use and are not locked in to using packages that you don't want to.</p>\n<p>Now it's time to...</p>\n<h3 id=\"start-the-engine\"><a href=\"#start-the-engine\"></a>Start the engine</h3>\n<pre><code class=\"language-console\">$ npm start\n</code></pre>\n<p>It's that simple.</p>\n<p>This command calls the <code>start</code> command from the <code>scripts</code> section of your\n<code>package.json</code>.\nAs you can see this will execute <code>phenomic start</code> command that will load the\nconfiguration and run the development mode.</p>\n<p>Now just wait for your browser to show up (yes this development mode should open\nyour development server in your favorite browser).</p>\n<p>When you get the hello world, you will be able to <a href=\"../usage/\">start hacking!</a></p>\n","rawBody":"\nPhenomic require at least\n**[Node.js@^4.2.0](http://nodejs.org/) / [npm@^3.0.0](http://npmjs.com/)**.  \nWe recommend you to use [nvm](https://github.com/creationix/nvm) to manage\ndifferent versions of node.\n\n**A minimal boilerplate is required, in order to provide you some\nflexibility.**\n\n## One command setup\n\n_Note: we recommend you to read the [detailed setup](#detailed-setup)\nif you are new to Phenomic._\n\n\n### OS X / Linux\n\n```console\n$ DIR=your-website-folder && mkdir $DIR && cd $DIR && mkdir node_modules && \\\nnpm i phenomic && ./node_modules/.bin/phenomic setup && npm i && npm start\n```\n\n### Windows\n\n```console\n> SET DIR=your-website-folder && mkdir %DIR% && cd %DIR% && mkdir node_modules && ^\nnpm i phenomic && ./node_modules/.bin/phenomic setup && npm i && npm start\n```\n\n## Detailed setup\n\n### Create a new folder\n\nThat's an easy step.\n\n```console\n$ DIR=your-website-folder\n$ mkdir $DIR && cd $DIR\n```\n\n### Get Phenomic\n\nYou will need to install Phenomic first, to generate the required boilerplate.\nYou can install Phenomic from npm to get latest stable version, or install\nit from git to get latest bleeding edge updates.\n\n_By installing it locally, you ensure that several projects can rely on\ndifferent versions of Phenomic.\nAnyway, Phenomic will probably not work installed globally._\n\n```console\n$ mkdir node_modules\n```\n\n*This command is to be sure that phenomic will be installed in the current\nfolder, otherwise, npm might try to install it in a parent folder until it\nfinds a ``node_modules`` or a ``package.json``, up to your HOME folder.*\n\n#### Install from npm\n\n```console\n$ npm install phenomic\n```\n\n* ``--save[-dev]`` is useless because there is no ``package.json`` yet.\n  This will be be handled by the setup command below.\n* You can ignore error about missing ``package.json`` and warnings about\n  missing peer dependencies.\n\n#### Install from git\n\nTo install from git, you will need to get some deps to transpile sources\n\n```console\n$ npm install babel-cli babel-preset-react babel-preset-es2015 babel-preset-stage-1 babel-plugin-flow-react-proptypes\n$ npm install https://github.com/MoOx/phenomic.git\n```\n\n### Setup boilerplate\n\n**Notice:** This step will create (and overwrite) any existing ``package.json``.\n\n```console\n$ ./node_modules/.bin/phenomic setup\n```\n\n**⚠️ If you got errors here, please double check that you have required version of\nNode and NPM specified at the top of this page.**\n\nAfter you answer some questions, your boilerplate is ready.  \n\n_Tip:_ You can open `package.json` and adjust some values to fit your needs.\n\n_Check out [Configuration](../usage/configuration/) for more information about\nthe configuration options._\n\n### Install dependencies\n\nWhen you are done the setup, it's time to get all dependencies.\n\n```console\n$ npm install\n```\n\nnpm will install some peer dependencies for you; by doing this we ensure that\n_you_ control the dependencies that you are using. This way you are totally aware\nof what you use and are not locked in to using packages that you don't want to.\n\nNow it's time to...\n\n### Start the engine\n\n```console\n$ npm start\n```\n\nIt's that simple.\n\nThis command calls the `start` command from the `scripts` section of your\n`package.json`.\nAs you can see this will execute ``phenomic start`` command that will load the\nconfiguration and run the development mode.\n\nNow just wait for your browser to show up (yes this development mode should open\nyour development server in your favorite browser).\n\nWhen you get the hello world, you will be able to [start hacking!](../usage/)\n","raw":"---\ntitle: How to setup Phenomic\n---\n\nPhenomic require at least\n**[Node.js@^4.2.0](http://nodejs.org/) / [npm@^3.0.0](http://npmjs.com/)**.  \nWe recommend you to use [nvm](https://github.com/creationix/nvm) to manage\ndifferent versions of node.\n\n**A minimal boilerplate is required, in order to provide you some\nflexibility.**\n\n## One command setup\n\n_Note: we recommend you to read the [detailed setup](#detailed-setup)\nif you are new to Phenomic._\n\n\n### OS X / Linux\n\n```console\n$ DIR=your-website-folder && mkdir $DIR && cd $DIR && mkdir node_modules && \\\nnpm i phenomic && ./node_modules/.bin/phenomic setup && npm i && npm start\n```\n\n### Windows\n\n```console\n> SET DIR=your-website-folder && mkdir %DIR% && cd %DIR% && mkdir node_modules && ^\nnpm i phenomic && ./node_modules/.bin/phenomic setup && npm i && npm start\n```\n\n## Detailed setup\n\n### Create a new folder\n\nThat's an easy step.\n\n```console\n$ DIR=your-website-folder\n$ mkdir $DIR && cd $DIR\n```\n\n### Get Phenomic\n\nYou will need to install Phenomic first, to generate the required boilerplate.\nYou can install Phenomic from npm to get latest stable version, or install\nit from git to get latest bleeding edge updates.\n\n_By installing it locally, you ensure that several projects can rely on\ndifferent versions of Phenomic.\nAnyway, Phenomic will probably not work installed globally._\n\n```console\n$ mkdir node_modules\n```\n\n*This command is to be sure that phenomic will be installed in the current\nfolder, otherwise, npm might try to install it in a parent folder until it\nfinds a ``node_modules`` or a ``package.json``, up to your HOME folder.*\n\n#### Install from npm\n\n```console\n$ npm install phenomic\n```\n\n* ``--save[-dev]`` is useless because there is no ``package.json`` yet.\n  This will be be handled by the setup command below.\n* You can ignore error about missing ``package.json`` and warnings about\n  missing peer dependencies.\n\n#### Install from git\n\nTo install from git, you will need to get some deps to transpile sources\n\n```console\n$ npm install babel-cli babel-preset-react babel-preset-es2015 babel-preset-stage-1 babel-plugin-flow-react-proptypes\n$ npm install https://github.com/MoOx/phenomic.git\n```\n\n### Setup boilerplate\n\n**Notice:** This step will create (and overwrite) any existing ``package.json``.\n\n```console\n$ ./node_modules/.bin/phenomic setup\n```\n\n**⚠️ If you got errors here, please double check that you have required version of\nNode and NPM specified at the top of this page.**\n\nAfter you answer some questions, your boilerplate is ready.  \n\n_Tip:_ You can open `package.json` and adjust some values to fit your needs.\n\n_Check out [Configuration](../usage/configuration/) for more information about\nthe configuration options._\n\n### Install dependencies\n\nWhen you are done the setup, it's time to get all dependencies.\n\n```console\n$ npm install\n```\n\nnpm will install some peer dependencies for you; by doing this we ensure that\n_you_ control the dependencies that you are using. This way you are totally aware\nof what you use and are not locked in to using packages that you don't want to.\n\nNow it's time to...\n\n### Start the engine\n\n```console\n$ npm start\n```\n\nIt's that simple.\n\nThis command calls the `start` command from the `scripts` section of your\n`package.json`.\nAs you can see this will execute ``phenomic start`` command that will load the\nconfiguration and run the development mode.\n\nNow just wait for your browser to show up (yes this development mode should open\nyour development server in your favorite browser).\n\nWhen you get the hello world, you will be able to [start hacking!](../usage/)\n","__filename":"docs/setup.md","__url":"/docs/setup/","__resourceUrl":"/docs/setup/index.html","__dataUrl":"/docs/setup/index.html.53d4ac7b015e2b0c7d70792a38fe6bcc.json"}